-> Intro
    -> Dennis Ritchie (C) & Ken Thompson (B, Go, Regex) [1],[2],[3]
        -> Jobbade i Bell Labs
        -> Tillsammans med MIT och GE Utvecklade Multics (Timeshare-system)
        -> Komplext med många problem
        -> UNIX börjades för att Thompson ville porta ett spel
            -> Skulle vara enkelt
            -> Dennis Ritchie anslöt
            -> "If the work is not credited, it's probably Dennis or Ken"
        -> Fick gemensam Turing-award för arbete kring "generella OS"
        
    -> Steve Bourne [4]
        -> Skrev "Bourne Shell" för UNIX

    -> Brian Fox
        -> Skrev 1989 BASH som ersättning för Bourne Shell
    
    -> Richard Stallman & Linus Thorvalds
        -> Linus skrev Linux-kernelen
        -> Linux-kernelen blev sen relevant för den valdes som en del till GNU-projektet.
            -> GNU är en rekursiv akronym för "GNU is Not UNIX" [6]
        -> Linus portade BASH och GCC (GNU Compiler Collection) bland annat [4]
            
            Rant:
            -> Tar för sig väldigt mycket creds för sin port
            -> Otrevlig mot kollegor [5]














-> Byggstenar i Bash
    -> Utility commands [7]
        ls      -> list files -> Listar upp filer
        ls -a   -> skriver ut "allt"
        ls -u   -> kolla när sist en fil öppnades
        stat    -> info om en fil
        stat demo.sh

        tr      -> Transform

        cd      -> change directory -> används för att byta directory
        mkdir   -> make directory -> gör en mapp
        rm      -> remove
        rm -R   -> rekursiv remove

        echo    -> Skriv ut sträng
        cat     -> catinate -> läser innehåll i en fil och skriver ut det
        cat sample.txt

        touch   -> Skapa en fil om den inte finns
                -> Om den finns uppdatera "latest accessed"

        grep    -> matchar raderna i en fil mot en sträng och skriver ut
        grep -i -> Case insensitive
        
        grep -i "blä." sample.txt

        grep -R -> rekursivt söker igenom filsystemet för filnamn

    -> Och självklart alla sorters subprogram i PATH som man kan deklarera själv.




    -> Operatorer
        |       -> Pipe -> Länka program/commands till varandra
        ||      -> OR -> LHS blir godkänt kör höger
        < >     -> Arrow operators -> Länka program till filer/strömmar "skriv över"
        ls > filer.txt

        << >>   -> Arrow operators -> Länka program till filer/strömmar "lägger till"
        &&      -> Ifall det först kommandot blir godkänt kör nästa
        ;       -> Separator





    -> Loopar
        while [statement]
        do
            []
        done

        for [variabel] in [set]
        do
            []
        done

        until [statement]
        do
            []
        done

        for var in 1 2 3 ; do echo 'hohoho' ; done





    -> Conditional
        -> 0: false
        -> 1: true
        -> Oftast returnerar program en av dom här

        if [statement] ; then
            []
        elif [statement] ; then
            []
        else
            []
        fi




    -> Kommentarer
        # Kommentar





    ->  Variabler
        variabel1 = "delfin-dalmatin"
        local variabel2 = "sengångar-sill"
        $1 - $9 (demo.sh first_arg second_arg )

        -> echo $variabel1
        -> echo $variabel2





    -> Funktioner
        ge_mig_groda () {
            echo 'ribbit'
        }

        ge_mig_en_grod()



// Oläsbart demo
for var in 1 2 3 ; do mkdir $var ; done && cd 1 && touch 'hiddeninfo.txt' && cd .. && grep -i "bläck" sample.txt | tr a-z A-Z > 1/hiddeninfo.txt

// Cleanup
rm -R 1 2 3













-> Källor
[1] https://en.wikipedia.org/wiki/Unix
[2] https://en.wikipedia.org/wiki/Dennis_Ritchie
[3] https://en.wikipedia.org/wiki/Ken_Thompson
[4] https://en.wikipedia.org/wiki/Bash_(Unix_shell)
[5] https://www.theregister.com/2013/07/16/torvalds_potty_mouty_fight_back/
[6] https://en.wikipedia.org/wiki/GNU
[7] https://www.ibm.com/docs/en/aix/7.1?topic=commands